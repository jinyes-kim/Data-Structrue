#include <stdio.h>
#include <stdlib.h>

/*
원형 링크드 리스트

헤드를 제일 마지막 노드에 위치시는 것으로 원형 구조로 구현할 수 있다.



insert_fisrt - 마지막 다음이 처음이니까 헤드(마지막 노드) 노드 뒤에 추가한다.
               원래 헤드 뒤의 노드를 새로 추가한 노드 뒤로 위치시킨다.


insert_last - 헤드 노드 뒤에 추가하고, 새로 추가한 노드를 헤드로 만든다.


*/

typedef int element;

typedef struct ListNode {
    element data;
    struct ListNode* link;
} ListNode;

void error(char* msg) {
    fprintf(stderr, "%s\n", msg);
    exit(1);
}

ListNode* insert_first(ListNode* head, element value) {
    ListNode* tmp = (ListNode*)malloc(sizeof(ListNode));
    tmp->data = value;
    if (head == NULL) {
        head = tmp;
        tmp->link = head;
    }
    else {
        tmp->link = head->link;
        head->link = tmp;
    }
    return head;
}

ListNode* insert_last(ListNode* head, element value) {
    ListNode* tmp = (ListNode*)malloc(sizeof(ListNode*));
    tmp->data = value;
    if (head == NULL) {
        head = tmp;
        tmp->link = head;
    }
    else {
        tmp->link = head->link;
        head->link = tmp;
        head = tmp;             //firtst 와 last 함수의 차이점은 이 한 줄
    }
    return head;
}

void print_list(ListNode* head) {
    if (head == NULL) return;
    ListNode* tmp = head->link;
    do {
        printf("%d ->", tmp->data);
        tmp = tmp->link;
    } while (tmp != head);
    printf("%d", tmp->data);    // 헤드 노드 출력
}


int main(void) {
    ListNode* head = NULL;
    head = insert_last(head, 1);
    head = insert_last(head, 2);
    head = insert_first(head, 3);
    head = insert_first(head, 4);

    print_list(head);
    return 0;
}
